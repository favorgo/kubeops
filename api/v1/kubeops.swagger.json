{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/kubeops.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "KubeOpsApi"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/kubeops/adhoc": {
      "post": {
        "operationId": "KubeOpsApi_RunAdhoc",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRunAdhocResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiRunAdhocRequest"
            }
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/healthz": {
      "get": {
        "operationId": "KubeOpsApi_Health",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/inventory": {
      "get": {
        "operationId": "KubeOpsApi_GetInventory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetInventoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/playbook": {
      "post": {
        "operationId": "KubeOpsApi_RunPlaybook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRunPlaybookResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiRunPlaybookRequest"
            }
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/project": {
      "get": {
        "operationId": "KubeOpsApi_ListProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageInfo.pageNum",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pageInfo.pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pageInfo.totalCount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "param.name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/project/{name}": {
      "get": {
        "operationId": "KubeOpsApi_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/result": {
      "get": {
        "operationId": "KubeOpsApi_ListResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageInfo.pageNum",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pageInfo.pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pageInfo.totalCount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "param.name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/result/{taskID}": {
      "get": {
        "operationId": "KubeOpsApi_GetResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    },
    "/kubeops/result/{taskID}/watch": {
      "post": {
        "operationId": "KubeOpsApi_WatchResult",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiWatchStream"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of apiWatchStream"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "KubeOpsApi"
        ]
      }
    }
  },
  "definitions": {
    "apiCreateProjectResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/apiProject"
        }
      }
    },
    "apiGetInventoryResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/apiInventory"
        }
      }
    },
    "apiGetResultResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/apiResult"
        }
      }
    },
    "apiGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "children": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "apiHealthResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "The response message containing the greetings"
    },
    "apiHost": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "privateKey": {
          "type": "string"
        },
        "proxyConfig": {
          "$ref": "#/definitions/apiProxyConfig"
        },
        "vars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "apiInventory": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiHost"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiGroup"
          }
        },
        "vars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "apiListProjectParam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "apiListProjectResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiProject"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/apiPageInfo"
        }
      }
    },
    "apiListResultResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiResult"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/apiPageInfo"
        }
      }
    },
    "apiPageInfo": {
      "type": "object",
      "properties": {
        "pageNum": {
          "type": "string",
          "format": "int64"
        },
        "pageSize": {
          "type": "string",
          "format": "int64"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiProject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@inject_tag: valid:\"string\""
        },
        "playbooks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiProxyConfig": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "finished": {
          "type": "boolean"
        },
        "content": {
          "type": "string"
        },
        "project": {
          "type": "string"
        }
      }
    },
    "apiRunAdhocRequest": {
      "type": "object",
      "properties": {
        "inventory": {
          "$ref": "#/definitions/apiInventory"
        },
        "pattern": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "param": {
          "type": "string"
        }
      }
    },
    "apiRunAdhocResult": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/apiResult"
        }
      }
    },
    "apiRunPlaybookRequest": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string"
        },
        "playbook": {
          "type": "string"
        },
        "inventory": {
          "$ref": "#/definitions/apiInventory"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "apiRunPlaybookResult": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/apiResult"
        }
      }
    },
    "apiWatchStream": {
      "type": "object",
      "properties": {
        "stream": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
